#include <fcntl.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <stdio.h>
#include <unistd.h>
#include <string.h>

int main(void) {
  int readServerfd;
  int writeServerfd;
  int ARRAY_SIZE = 28;
  int sem = 1;
  
  char * inputFIFO = "/tmp/client100fifo";
  mkfifo(inputFIFO, 0666);

  char * outputFIFO = "/tmp/outputfifo";
  mkfifo(outputFIFO, 0666);

  // open input fifo to read
  readServerfd = open(inputFIFO, O_RDONLY);

  // open output fifo to write
  writeServerfd = open(outputFIFO, O_WRONLY);
  
  //pID, callNum, numParam, Param1, Param2, Result, Stored Num
  int clientInfo2[] = {0, 0, 0, 0, 0, 0, 0}; //pId start at 1
  int pIDCounter = 1;
  int clientFileFd[10]; //file descriptor for 10 clients
  int clientCounter = 0;

  while(1){
  read(readServerfd, &clientInfo2, ARRAY_SIZE);
    clientFileFd[clientInfo2[0]-1] = writeServerfd; //save returnFd of each client
  if(clientInfo2[1] == 2){
  clientInfo2[5] = clientInfo2[3] + clientInfo2[4];
  }
  else if(clientInfo2[1] == 1){
  clientInfo2[0] = pIDCounter;
  pIDCounter += 1;
  clientCounter += 1;
  }
  else if(clientInfo2[1] == 3){
  clientInfo2[5] = clientInfo2[3] - clientInfo2[4];
  }
  else if(clientInfo2[1] == 4){
  clientInfo2[5] = clientInfo2[3] * clientInfo2[4];
  }
  else if(clientInfo2[1] == 5){
  clientInfo2[5] = clientInfo2[3] / clientInfo2[4];
  }
  
  else if(clientInfo2[1] == 6){
    printf("%d has been stored\n", clientInfo2[6]);
  }
  
  else if(clientInfo2[1] == 7){
    write(writeServerfd, &clientInfo2, ARRAY_SIZE);
    printf("%d has been sent to the client", clientInfo2[6]);
  }
  else if(clientInfo2[1] == 8){
    if(sem == 1){
    clientInfo2[5] = sem;
    sem = 0;
    write(writeServerfd, &clientInfo2, ARRAY_SIZE);
    }
  }
  else if(clientInfo2[1] == 9){
  sem += 1;
  }
  else if(clientInfo2[1] == 10){
  	clientInfo2[5] = clientCounter;
      write(writeServerfd, &clientInfo2, ARRAY_SIZE);
  }
  else if(clientInfo2[1] == -1){
    printf("Termination signal received\n");
    close(writeServerfd);
    close(readServerfd);
    return 0;
  }
  
  else if(clientInfo2[1] == 0){
      clientInfo2[3] = 0;
    clientInfo2[4] = 0;
    clientInfo2[5] = 0;
    clientInfo2[6] = 0;
    clientCounter -= 1;
    printf("A client has disconnected\n"); 
  }
  
  printf("Client's process Id is %d\n", clientInfo2[0]);
  printf("System Call Requested: %d with %d parameters which are:\n", clientInfo2[1], clientInfo2[2]);
  printf("Param1=%d Param2=%d result=%d\n", clientInfo2[3], clientInfo2[4], clientInfo2[5]);
  write(writeServerfd, &clientInfo2, ARRAY_SIZE);
  
  } // end while
  return 0;}
